#!/usr/bin/env pyrate
#
# Copyright (C) 2015 BMW Car IT GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

- env:
    GLOBAL_FOO: /opt/backup

- teststep:
    name: global variable
    command: 'echo "Basedir is: {GLOBAL_FOO}"'
    stdout:
    - contains: "Basedir is: /opt/backup"
    - contains: "Basedir is: {GLOBAL_FOO}"

- teststep:
    name: foostep
    command: echo shared step with parameters {PARAM1} and {PARAM2}
    exit: SUCCESS
    stdout:
    - contains: '{PARAM1}'
    - contains: '{PARAM2}'

    # in this example this test step gets called with a param bar,
    # so lets check for it
    - contains: bar

- testcase:
    name: first
    fatal: true
    steps:
    - foostep:
        PARAM1: foo
        PARAM2: bar
    - foostep:
        PARAM1: bar
        PARAM2: bar
    - teststep:
        name: step1
        command: |
            #!/bin/bash
            echo sleep
            sleep 20
            echo "afterfoo sleep" 1>&2

        exit: -9
        fatal: true
        timeout: 1000

        stdout: ^sleep$
        stderr:
        - notcontains: after

    - teststep:
        name: step2
        command: echo barfoo 1>&2
        exit: 0
        stderr: '^(bar|after)foo'
        stdout: ''

- testcase:
    name: second
    steps:
    - global variable
    - teststep:
        name: step1 of case second
        command: echo bar && false
        exit: 1
        stdout:
        - notcontains: 'foo'

        # this matches the whole string
        - contains: '^bar$'
        - notcontains: 'bl[ua]bb'
        - notcontains: 'bl[ua]bb'
